# This is a basic workflow that is manually triggered

name: Python Unit Testing

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      trigger_agent:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person Triggering the Workflow'
        # Default value if no value is explicitly provided
        default: 'Tanmoy'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Echo Trigger Agent
      run: echo "Test triggered by ${{ github.event.inputs.trigger_agent }}"
      
  
  build-and-test-JSON:
    runs-on: ubuntu-latest
    needs: ["greet"]
    
    steps:
    - uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Setup Python
      uses: actions/setup-python@v2.3.1
      with:
          python-version: 3.7
    - name: Create Virtual Environment
      run: |
          pip install virtualenv
          virtualenv venv
    - name: Installing the Package
      run: |
          python setup.py --test-pyp install
    - name: Run JSON Tests
      run: | 
        python -m unittest tests/JSONConfigParser_test.py

  build-and-test-NDJSON:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Setup Python
      uses: actions/setup-python@v2.3.1
      with:
          python-version: 3.7
    - name: Create Virtual Environment
      run: |
          pip install virtualenv
          virtualenv venv
    - name: Installing the Package
      run: |
          python setup.py --test-pyp install
    - name: Run NDJSON Tests
      run: | 
        python -m unittest tests/NDJSONConfigParser_test.py
        
  run-end:
    runs-on: ubuntu-latest
    needs: ["build-and-test-JSON", "build-and-test-NDJSON"]
    
    steps:
    
    - name: Message
      run: |
        echo "Success"
